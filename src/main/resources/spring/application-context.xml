<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:data="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation=
	"http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/tx       http://www.springframework.org/schema/tx/spring-tx.xsd
     http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
     http://www.springframework.org/schema/aop      http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/task     http://www.springframework.org/schema/task/spring-task.xsd">

	<context:annotation-config />
	<context:component-scan base-package="org.gsoft.openserv" />
	<data:repositories base-package="org.gsoft.openserv.repositories" />
	<task:annotation-driven/>
	<aop:aspectj-autoproxy/>

	<!-- Load in application properties reference -->
	<bean id="applicationProperties"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="#{systemEnvironment['IS_CI']=='true'?'classpath:openserv/ci.application.properties':'classpath:openserv/application.properties'}" />
	</bean>
	
	<bean id="facebook.clientId" class="java.lang.String">
		<constructor-arg value="${facebook.clientId}"></constructor-arg>
	</bean>
	<bean id="facebook.clientSecret" class="java.lang.String">
		<constructor-arg value="${facebook.clientSecret}"></constructor-arg>
	</bean>
	<bean id="twitter.consumerKey" class="java.lang.String">
		<constructor-arg value="${twitter.consumerKey}"></constructor-arg>
	</bean>
	<bean id="twitter.consumerSecret" class="java.lang.String">
		<constructor-arg value="${twitter.consumerSecret}"></constructor-arg>
	</bean>
	<bean id="facebook.redirectUrl" class="java.lang.String">
		<constructor-arg value="${facebook.redirectUrl}"></constructor-arg>
	</bean>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages"/>
	</bean>
  	<!-- thread scope is needed by spring-aop -->
  	<bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
      <property name="scopes">
          <map>
              <entry key="thread">
                  <bean class="org.springframework.context.support.SimpleThreadScope"/>
              </entry>
          </map>
      </property>
  	</bean>

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    	<property name="formatters">
    		<list>
    			<bean class="org.gsoft.openserv.web.formatter.currency.CurrencyInPenniesFormatAnnotationFormatterFactory"/>
    			<bean class="org.gsoft.openserv.web.formatter.percent.PercentFormatAnnotationFormatterFactory"/>
    		</list>
    	</property>
    	<property name="converters">
        	<list>
        		<bean class="org.gsoft.openserv.web.converters.CurrencyInPenniesConverterFactory"/>
        	</list>
    	</property>
	</bean>
	
	<bean id="validator"
      class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
      
	<!-- DataSource configuration -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${openserv.db.driver}" />
		<property name="url" value="${openserv.db.url}" />
		<property name="username" value="${openserv.db.username}" />
		<property name="password" value="${openserv.db.password}" />
	</bean>

	<!-- JPA EntityFactory configuration -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="org.gsoft" />
		<property name="persistenceProviderClass" value="org.hibernate.ejb.HibernatePersistence" />
	</bean>

	<!-- Transaction Manager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven />
	
	<bean class="org.springframework.social.connect.web.ProviderSignInController">
    	<!-- relies on by-type autowiring for the constructor-args -->    
	</bean>

  	<import resource="security-context.xml"/>
</beans>